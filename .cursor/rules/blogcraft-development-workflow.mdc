---
alwaysApply: true
description: BlogCraft AI 개발 워크플로우 및 문제해결 기준
---

# BlogCraft AI 개발 워크플로우 기준

## 🚀 서버 실행 순서

### 1. 백엔드 서버 실행
```bash
cd /Users/alphabridge/BOBLBOBL/backend
npm run dev
```
- 포트: 8000
- 실행 확인: http://localhost:8000/health

### 2. 프론트엔드 서버 실행
```bash
cd /Users/alphabridge/BOBLBOBL/frontend
npm run dev
```
- 포트: 3000
- 실행 확인: http://localhost:3000

## 🗄️ 데이터베이스 관리

### Prisma 명령어
```bash
# 스키마 적용
npx prisma db push

# 클라이언트 재생성
npx prisma generate

# 데이터베이스 스튜디오
npx prisma studio --port 5555
```

## �� 문제해결 체크리스트

### 1. 백엔드 서버 오류 시
- [ ] 환경변수 설정 확인 (.env 파일)
- [ ] 데이터베이스 연결 확인 (Railway PostgreSQL)
- [ ] 포트 8000 사용 가능 확인
- [ ] Prisma 클라이언트 재생성

### 2. 프론트엔드 빌드 오류 시
- [ ] Next.js 15 + React 19 호환성 확인
- [ ] Suspense 래핑 확인 (useSearchParams)
- [ ] 환경변수 설정 확인 (.env.local)
- [ ] 타입스크립트 오류 확인

### 3. OAuth 연결 오류 시
- [ ] Google OAuth 자격증명 확인
- [ ] 콜백 URL 설정 확인
- [ ] 데이터베이스 연결 상태 확인
- [ ] 서버 로그 확인

## 📦 의존성 관리

### 백엔드 주요 의존성
- Express.js 5.x
- TypeScript
- Prisma 6.x
- Passport.js
- dotenv

### 프론트엔드 주요 의존성
- Next.js 15.x
- React 19.x
- Tailwind CSS
- Radix UI

## 🔐 보안 규칙
- API 키 노출 금지
- 환경변수 파일 (.env) 커밋 금지
- OAuth 자격증명 보안 유지
- 데이터베이스 연결 정보 보호

## 📝 코드 스타일 가이드
- TypeScript 사용 필수
- ESLint 규칙 준수
- 컴포넌트 네이밍: PascalCase
- 파일 네이밍: kebab-case (페이지), camelCase (컴포넌트)
